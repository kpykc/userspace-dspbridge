*  ======== acpy24xx/_dma.h55 ========
*  This file contains object declarations used by the acpy library. 
*
 .if !$isdefed("_DMA_H55_")
_DMA_H55_  .equ 1

 .include "dma24xx.h55"    
 .include "idma2.h55"
 .include "acpy2_omap.h55"


*
*  ======== _DMA_Handle ========
*
* typedef struct _DMA_Obj *_DMA_Handle;

 .if 0
* Note: the DMA_Job struct is defined in dma24xx.h55

*
*  ======== _DMA_Job ========
*
_DMA_Job	.struct
cnt	.int  ; Uns       ; size of transfer in params.elemSize units 
filler	.int  ; (for alignment only)
src	.long ; IDMA2_AdrPtr    ; Source address (32-bit address)
dst	.long ; IDMA2_AdrPtr    ; destination address (32-bit address)
handle	.long ; _DMA_Handle     ; algorithm DMA object 
nextJob .long ; __DMA_Job*      ; next struct in job queue (last points to first)
_DMA_JobSize	.endstruct	; 10 words

* Note: the DMA_JobQueue struct is defined in dma24xx.h55
*
*  ======== _DMA_QueueObj ========
*
_DMA_QueueObj           .struct
curHandle               .long   ; (_DMA_Handle) Points to the current hdl being processed
reqPending              .int    ; Number of outstanding reqs to be serviced
len                     .int    ; length of the queue
readPtr                 .long   ; (_DMA_Job *) current read pointer
writePtr                .long   ; (_DMA_Job *) current write pointer
_DMA_QueueObjSize       .endstruct	; 8 words
 .endif


*
*  ======== _DMA_Obj ========
*  The IDMA2 channel object.
*
_DMA_Obj	.struct
numJobs	 .int	;    volatile Int numJobs;  ; Number of outstanding jobs 
filler1	 .int	; (for alignment only)
jobQueue .long	;    _DMA_Queue   jobQueue; ; Software queue of logical channel to use 
channel	 .int	; Index of logical channel to use 
filler2	 .int	; (for alignment only)
csdp	 .long	; LgUns csdp;   ; Channel source/dest param register value 
ccr	 .int	; Uns ccr;      ; Channel control register value 
cfn	 .int	; Channel Frame number register value 
csei	 .int	; Channel source element index register value 
csfi	 .int	; Channel source frame index register value 
cdei	 .int	; Channel dest element index register value 
cdfi	 .int	; Channel dest frame index register value 
ccr2	 .int	; Channel endianism register value 
filler3	 .int	; (for alignment only)
    ; Callback function pointer for notification of completed DMA transfer 
cbFxn	 .long	; ACPY2_OMAP_CallbackFxn cbFxn;
cbArg    .long   ; Argument to be passed to callback function
_DMA_ObjSize	.endstruct	; 20 words

* // Array of channel numbers enabled for DMAN 
* extern Int _DMA_channel[];
* extern _DMA_QueueObj _DMA_jobQueue[];

 .endif ; if !$isdefed("_DMA_H55_")

