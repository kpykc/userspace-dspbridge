/*
 *  Copyright 2007 by Texas Instruments Incorporated.
 *
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */

/*
 *  ======== dman24xx.tci ========
 */

var MAXIRQ = 4;
var MAXCHANNELS = 24;
var DEFAULTIRQ = 2;
var DEFAULTQLEN = 16;

var $$name =  "DMAN24XX";

var $$label = "Properties for DSP Bridge DMAN24XX module";

/* Global properties for DMAN24XX object */
var $$global = [
        {
            name : "OBJMEMSEG",
            val  : prog.module("MEM").BIOSOBJSEG,
            label: "Segment for DMAN24XX objects",
            type : "Object",
        },
        {
            name : "NUMCHANNELS",
            val  : MAXCHANNELS,
            label: "Maximum number of logical DMA channels",
            type : "Integer",
            test : ["validNumChans"],
        },
        {
            name : "DMANIRQ",
            val  : DEFAULTIRQ,
            label: "IRQ that DMAN channels are mapped to",
            type : "Integer",
            test : ["validIRQ"],
        },
        {
            name : "QUEUELEN",
            val  : DEFAULTQLEN,
            label: "Length of software DMA queues",
            type : "Integer",
        },
            ];

/* Per instance properties */
var $$instance = [
        {
            name : "enabled",
            val  : false,
            label: "Enable channel for use by DMAN",
            type : "Boolean",
        },
        {
            name : "priority",
            val  : "high",
            label: "Channel priority",
            type : "String",
            //test : [""],
        },
            ];

/* template files */
var $$template =
    {
        asmSource : undefined,
        asmHeader : undefined,
        cSource   : "ti/sdo/fc/dman/dman24xx_c.tpl",
        cHeader   : undefined,
        linker    : "ti/sdo/fc/dman/dman24xx_cmd.tpl",
    };

/*
 *  ======== Test Functions ========
 */

function validIRQ (text, val)
{
    if ((val < 0) || (val > MAXIRQ)) {
        throw (text + " IRQ number must be betwee 0 and " + MAXIRQ);
    }
}

function validNumChans (text, val)
{
    var errMsg = text;

    for (var i = val; i < MAXCHANNELS; i++) {
        
        if (this.instance("DMAN24XX_CH" + i).enabled == true) {
            // Should not enable a channel that is out of range
            // We could just ignore this channel, but it may be due to a
            // mistake in the .tcf file.
            errMsg = errMsg + " channel " + chan + " should not be enabled";
            errMsg = errMsg + " since DMAN24XX.NUMCHANNELS = ";
            errMsg = errMsg + val + ". Only channels DMAN24XX_CH0 - ";
            errMsg = errMsg + "DMAN24XX_CH" + (val - 1) + " can be enabled.";
            throw(errMsg);
        }
    }
}

/*
 *  ======== Module Initialization ========
 */
function init ()
{
    // Create DMAN24XX channel objects
    for (var i = 0; i < MAXCHANNELS; i++) {
        var name = "DMAN24XX_CH" + i;
        var chan = this.create(name);
        chan.enabled = false;
    }
}

/*
 *  @(#) ti.sdo.fc.dman; 1,0,0,20; 5-10-2007 10:49:28; /db/atree/library/trees/fc-b12x/src/
 */

